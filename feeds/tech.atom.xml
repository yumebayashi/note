<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>yumebayashi's note</title><link href="http://yumebayashi.github.io/note/" rel="alternate"></link><link href="http://yumebayashi.github.io/note/feeds/tech.atom.xml" rel="self"></link><id>http://yumebayashi.github.io/note/</id><updated>2016-09-12T00:00:00+09:00</updated><entry><title>Export results with CSV files with MySQL, Postgres</title><link href="http://yumebayashi.github.io/note/export-results-with-csv-files-with-mysql-postgres.html" rel="alternate"></link><published>2016-09-12T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-09-12:note/export-results-with-csv-files-with-mysql-postgres.html</id><summary type="html">&lt;h2&gt;Environments&lt;/h2&gt;
&lt;h3&gt;db&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;postgres:9.4.4&lt;/li&gt;
&lt;li&gt;mysql5.6.26&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;db-config&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;user:hoge&lt;/li&gt;
&lt;li&gt;password:fuga&lt;/li&gt;
&lt;li&gt;host:localhost&lt;/li&gt;
&lt;li&gt;database:mydb&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Postgres&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;psql -h localhost -U hoge mydb -c "select id,name from users" -A -F, -t &amp;gt; user.csv&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;option&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-A, --no-align : unaligned table output mode
-F, --field-separator=STRING : field separator for unaligned output (default: &amp;quot;|&amp;quot;)
-t, --tuples-only : print rows only(ignore header)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;*if you want to skip password request &lt;code&gt;Password for user hoge:&lt;/code&gt;
add below file&lt;/p&gt;
&lt;p&gt;dir:&lt;code&gt;$HOME/.pgpass&lt;/code&gt;
file format:&lt;code&gt;[host]:[port]:[database]:[user]:[pass]&lt;/code&gt;
ex) &lt;code&gt;localhost:5432:mydb:hoge:huga&lt;/code&gt;
permission:&lt;code&gt;chmod 600 $HOME/.pgpass&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;MySQL&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mysql -uhoge -phuga -hlocalhost mydb -e"select id,name from users" | tr '\t' ',' &amp;gt; user.csv&lt;/code&gt;&lt;/p&gt;</summary><category term="mysql"></category><category term="posgres"></category></entry><entry><title>Chrome Search Setting</title><link href="http://yumebayashi.github.io/note/chrome-search-setting.html" rel="alternate"></link><published>2016-09-06T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-09-06:note/chrome-search-setting.html</id><summary type="html">&lt;h3&gt;Setting&lt;/h3&gt;
&lt;p&gt;go to chrome setting page
&lt;a href="chrome://settings/"&gt;chrome://settings/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/chrome.png" width="100%" &gt;&lt;/p&gt;
&lt;h4&gt;example&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;en https://www.google.com/search?q=%s&amp;amp;hl=en
alc http://eow.alc.co.jp/search?q=%s
ama https://www.amazon.co.jp/s?field-keywords=%s
y http://www.youtube.com/results?search_query=%s
h http://b.hatena.ne.jp/search/text?q=%s
w http://ja.wikipedia.org/w/index.php?search=%s
&lt;/pre&gt;&lt;/div&gt;</summary><category term="chrome"></category></entry><entry><title>Install Mecab</title><link href="http://yumebayashi.github.io/note/install-mecab.html" rel="alternate"></link><published>2016-08-12T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-08-12:note/install-mecab.html</id><summary type="html">&lt;h3&gt;Download&lt;/h3&gt;
&lt;p&gt;Download mecab core and dictionary.&lt;br /&gt;
&lt;a href="http://taku910.github.io/mecab/#download"&gt;http://taku910.github.io/mecab/#download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;files are on google drive, if you want to use cli, need to add option like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget &amp;#39;https://drive.google.com/uc?export=download&amp;amp;id=0B4y35FiV1wh7cENtOXlicTFaRUE&amp;#39; -O mecab-0.996.tar.gz
wget &amp;#39;https://drive.google.com/uc?export=download&amp;amp;id=0B4y35FiV1wh7MWVlSDBCSXZMTXM&amp;#39; -O mecab-ipadic-2.7.0-20070801.tar.gz 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install Mecab core&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar zxfv mecab-0.996.tar.gz
cd mecab-0.996
./configure 
make
sudo make install
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install Dictionary&lt;/h3&gt;
&lt;p&gt;default char set is &lt;code&gt;EUC-JP&lt;/code&gt;
In this case, set char set &lt;code&gt;UTF8&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar zxfv mecab-ipadic-2.7.0-20070801.tar.gz
cd mecab-ipadic-2.7.0-20070801
./configure --enable-utf8-only --with-charset=utf8
make
sudo make install
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;今日はとても熱い&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; mecab
今日  名詞,副詞可能,*,*,*,*,今日,キョウ,キョー
は   助詞,係助詞,*,*,*,*,は,ハ,ワ
とても 副詞,助詞類接続,*,*,*,*,とても,トテモ,トテモ
熱い  形容詞,自立,*,*,形容詞・アウオ段,基本形,熱い,アツイ,アツイ
EOS
&lt;/pre&gt;&lt;/div&gt;</summary><category term="mecab"></category></entry><entry><title>Install Gradle</title><link href="http://yumebayashi.github.io/note/install-gradle.html" rel="alternate"></link><published>2016-08-05T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-08-05:note/install-gradle.html</id><summary type="html">&lt;h3&gt;install script for centos&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;cd /opt/&lt;/span&gt;
&lt;span class="x"&gt;sudo wget -N https://services.gradle.org/distributions/gradle-2.6-all.zip&lt;/span&gt;
&lt;span class="x"&gt;sudo unzip gradle-2.6-all.zip&lt;/span&gt;
&lt;span class="x"&gt;sudo rm gradle-2.6-all.zip&lt;/span&gt;
&lt;span class="x"&gt;sudo ln -s gradle-2.6 gradle&lt;/span&gt;
&lt;span class="x"&gt;sudo printf &amp;quot;export GRADLE_HOME=/opt/gradle\nexport PATH=\&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:\&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GRADLE_HOME&lt;/span&gt;&lt;span class="x"&gt;/bin&amp;quot; &amp;gt; /etc/profile.d/gradle-env.sh&lt;/span&gt;
&lt;span class="x"&gt;source /etc/profile.d/gradle-env.sh&lt;/span&gt;
&lt;span class="x"&gt;gradle -version&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="gradle"></category></entry><entry><title>q command for querying on csv file directly</title><link href="http://yumebayashi.github.io/note/q-command-for-querying-on-csv-file-directly.html" rel="alternate"></link><published>2016-06-19T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-06-19:note/q-command-for-querying-on-csv-file-directly.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/harelba/q"&gt;https://github.com/harelba/q&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;environment&lt;/h3&gt;
&lt;p&gt;requires python 2.X&lt;br /&gt;
&lt;code&gt;brew install q&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;usage&lt;/h3&gt;
&lt;p&gt;you can read help by -h option.&lt;br /&gt;
&lt;code&gt;q -h&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;if csv has header, we need append -H.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;q -d , -H &amp;quot;select * from tmp.csv&amp;quot;
1,aaa,23
2,bbb,54
3,ccc,12
4,ddd,65
5,eee,33
6,fff,75
7,ggg,80
8,hhh,89
9,iii,34
10,kkk,96
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;q -d , -H &amp;quot;select id from tmp.csv order by id desc limit 4&amp;quot;
10
9
8
7
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;q -d , -H &amp;quot;select *,(case when score &amp;gt; 50 then 1 else 0 end) from tmp.csv&amp;quot; &amp;gt; tmp2.csv
1,aaa,23,0
2,bbb,54,1
3,ccc,12,0
4,ddd,65,1
5,eee,33,0
6,fff,75,1
7,ggg,80,1
8,hhh,89,1
9,iii,34,0
10,kkk,96,1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;we choose column like c1,c2 for no-header files  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;q -d , &amp;quot;select c4, sum(c3) from tmp2.csv group by c4&amp;quot;
0,102
1,459
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;below query returns the same result as above. we can pipe the stdout with "-"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;q -d , -H &amp;quot;select *,(case when score &amp;gt; 50 then 1 else 0 end) from tmp.csv&amp;quot; | q -d , &amp;quot;select c4, sum(c3) from -  group by c4&amp;quot;
0,102
1,459
&lt;/pre&gt;&lt;/div&gt;</summary><category term="q"></category><category term="query"></category><category term="shell"></category></entry><entry><title>Narrative Clip Script to make mp4 from images</title><link href="http://yumebayashi.github.io/note/narrative-clip-script-to-make-mp4-from-images.html" rel="alternate"></link><published>2016-06-02T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-06-02:note/narrative-clip-script-to-make-mp4-from-images.html</id><summary type="html">&lt;h3&gt;What is this script?&lt;/h3&gt;
&lt;p&gt;Narrative Clip is a kind of life logging gadget.
It takes a photo every 30 seconds (default setting).
If we wear a Narrative Clip 10 hour a day, we get 1200 photos.
This script make it possible to crop all photos square and combine them and make mp4 video,
considering its rotation exif data and the necessity of being pixelated/blurred.&lt;/p&gt;
&lt;h3&gt;Requirement&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;li&gt;opencv&lt;/li&gt;
&lt;li&gt;ffmpeg  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Download&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/downloads/narrativeclip.py"&gt;narrativeclip.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/downloads/haarcascade_frontalface_default.xml"&gt;haarcascade_frontalface_default.xml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Getting Started&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;brew install opencv3 --with-python3&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;br /&gt;
set python script and face detection model file to below dir.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;├── 2016
│   └── 05
│       └── 31
│           ├── 20160531_123827_000.jpg
│           ├── 20160531_123837_000.jpg
│           ├── :
│           ├── :
│           └── meta
│               ├── 20160531_123827_000.json
│               ├── 20160531_123827_000.snap
│               ├── 20160531_123837_000.json
│               ├── 20160531_123837_000.snap
│               ├── :
│               └── :
├── haarcascade_frontalface_default.xml   &amp;lt;-- put file here
└── narrativeclip.py                      &amp;lt;-- put file here
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;execute the script by &lt;code&gt;python narrativeclip.py {yyyy/MM/dd} {fps}&lt;/code&gt;&lt;br /&gt;
video.mp4 is output video file, and source images are components of its movie.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;├── 2016
│   └── 05
│       └── 31
│           ├── 20160531_123827_000.jpg
│           ├── 20160531_123837_000.jpg
│           ├── :
│           ├── :
│           ├── meta
│           │   ├── 20160531_123827_000.json
│           │   ├── 20160531_123827_000.snap
│           │   ├── 20160531_123837_000.json
│           │   ├── 20160531_123837_000.snap
│           │   ├── :
│           │   └── :
│           ├── source00000.jpg    &amp;lt;-- new file
│           ├── source00001.jpg    &amp;lt;-- new file
│           ├── source00002.jpg    &amp;lt;-- new file
│           ├── source00003.jpg    &amp;lt;-- new file
│           └── video.mp4          &amp;lt;-- new file
├── haarcascade_frontalface_default.xml
└── narrativeclip.py
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;PIL.Image&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;

&lt;span class="n"&gt;param&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;r&amp;quot;\d{4}/\d{2}/\d{2}&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;

&lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;arg is {yyyy/MM/dd} {fps}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# rotate images by its exif, and crop them to square&lt;/span&gt;
&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{0}/[0-9]*.jpg&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;convert_image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FLIP_LEFT_RIGHT&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ROTATE_180&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FLIP_TOP_BOTTOM&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FLIP_LEFT_RIGHT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ROTATE_90&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ROTATE_270&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FLIP_LEFT_RIGHT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ROTATE_270&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ROTATE_90&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;exif&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_getexif&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;exif&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;orientation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exif&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0x112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;convert_image&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;orientation&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
            &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crop&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;
            &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crop&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;pix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="c1"&gt;# remove black images&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{0}/source{1:05d}.jpg&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;JPEG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;can not open &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="c1"&gt;# pixelate each images if it has face&lt;/span&gt;
&lt;span class="n"&gt;face_cascade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CascadeClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;haarcascade_frontalface_default.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{0}/source*.jpg&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; mosaic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_RGB2GRAY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;face&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;face_cascade&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detectMultiScale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scaleFactor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minNeighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;face&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;face&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cut_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;cut_face&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cut_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="c1"&gt;# the size of being pixelated&lt;/span&gt;
            &lt;span class="n"&gt;cut_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cut_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cut_face&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cut_face&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="n"&gt;cut_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cut_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cut_face&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interpolation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INTER_NEAREST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cut_img&lt;/span&gt;

    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroyAllWindows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ffmpeg -f image2 -r {1} -i {0}/source&lt;/span&gt;&lt;span class="si"&gt;%05d&lt;/span&gt;&lt;span class="s1"&gt;.jpg -r {1} -an -vcodec libx264 -pix_fmt yuv420p {0}/video.mp4&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="narrativeclip"></category><category term="gadget"></category><category term="script"></category><category term="python"></category><category term="opencv"></category></entry><entry><title>EyeTribe demo using java</title><link href="http://yumebayashi.github.io/note/eyetribe-demo-using-java.html" rel="alternate"></link><published>2016-05-28T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-05-28:note/eyetribe-demo-using-java.html</id><summary type="html">&lt;p&gt;EyeTribe is the world's first affordable eye tracker.&lt;br /&gt;
It enables us to get the eye movement trajectories and develop some tools with it.&lt;br /&gt;
Today I'll show you a demo play.&lt;br /&gt;
&lt;a href="https://github.com/yumebayashi/eyetribe-experiment"&gt;Github Fork Me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/system.png" width="100%"&gt;&lt;/p&gt;
&lt;p&gt;The eyetribe sercer gives 30 fps data by default setting.&lt;br /&gt;
The upper limit is 60 fps. I use default value.&lt;br /&gt;
Every data can not return the coordinates of the point precisely.&lt;br /&gt;
Moreover small eye movement in a moment can be a noise.&lt;br /&gt;
I use Simple Moving Median to get current position for each 0.1 sec.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;private Point2D getMedian() {
    Arrays.sort(xs);
    Arrays.sort(ys);

    float x = (xs[14] + xs[15]) / 2;
    float y = (ys[14] + ys[15]) / 2;

    return new Point2D(x, y);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In my display (1440x900), I think 9 blocks is the upper limit of detecting the eye position.  &lt;/p&gt;
&lt;iframe src="https://www.youtube.com/embed/F-JJikCd6Nc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="java"></category><category term="eyetribe"></category><category term="gadget"></category></entry><entry><title>Splitting words into letters in Java</title><link href="http://yumebayashi.github.io/note/splitting-words-into-letters-in-java.html" rel="alternate"></link><published>2016-05-13T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-05-13:note/splitting-words-into-letters-in-java.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;-java7&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;hoge&amp;quot;.split(&amp;quot;&amp;quot;);
// [&amp;quot;&amp;quot;, &amp;quot;h&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;g&amp;quot;, &amp;quot;e&amp;quot;]
&amp;quot;hoge&amp;quot;.split(&amp;quot;(?&amp;lt;=.)&amp;quot;);
// [&amp;quot;h&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;g&amp;quot;, &amp;quot;e&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;java8-&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;hoge&amp;quot;.split(&amp;quot;&amp;quot;);
// [&amp;quot;h&amp;quot;, &amp;quot;o&amp;quot;, &amp;quot;g&amp;quot;, &amp;quot;e&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;</summary><category term="java"></category></entry><entry><title>Calculate approximate distance between two latitude/longitude points by simple query</title><link href="http://yumebayashi.github.io/note/calculate-approximate-distance-between-two-latitudelongitude-points-by-simple-query.html" rel="alternate"></link><published>2016-05-11T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-05-11:note/calculate-approximate-distance-between-two-latitudelongitude-points-by-simple-query.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;make initial data set&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CREATE TABLE tmp_test (
   name character varying(255),
   lat1 numeric(8,5),
   lng1 numeric(8,5),
   lat2 numeric(8,5),
   lng2 numeric(8,5)
)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INSERT INTO tmp_test VALUES
(&amp;#39;tokyo-shinjuku&amp;#39;,35.680605, 139.767351,35.689862,139.700253);
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;select * from tmp_test ;
      name      |   lat1   |   lng1    |   lat2   |   lng2
----------------+----------+-----------+----------+-----------
 tokyo-shinjuku | 35.68061 | 139.76735 | 35.68986 | 139.70025
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;plan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;consider the Earth as sphere&lt;/li&gt;
&lt;li&gt;calculate m/degree for each lat/lng&lt;/li&gt;
&lt;li&gt;calculate the distance of each directions&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;calculate the distance by Pythagorean theorem&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Earth_radius"&gt;Earth radius&lt;/a&gt;&lt;br /&gt;
R : 6,371km = 6371000m  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Calculating the distance of latitude direction is simple.
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{2\pi R}{360} abs(lat1 - lat2)  $$&lt;/div&gt;
&lt;p&gt;Calculating the distance of longitude direction is a bit complicated.&lt;br /&gt;
Radius varies by its latitude.&lt;br /&gt;
&lt;img src="/images/explain.png" width="300px"&gt;&lt;br /&gt;
I fix the radius by the middle point of two latitudes.&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{2\pi}{360} Rcos(\frac{\frac{(lat1 + lat2)}{2}\pi}{180}) abs(lng1 -lng2) $$&lt;/div&gt;
&lt;p&gt;then apply Pythagorean theorem
&lt;/p&gt;
&lt;div class="math"&gt;$$  \sqrt{(\frac{2\pi R}{360} (lat1 - lat2))^2 + (\frac{2\pi}{360} Rcos(\frac{\frac{(lat1 + lat2)}{2}\pi}{180}) (lng1 -lng2))^2} $$&lt;/div&gt;
&lt;p&gt;
↓
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{2\pi R}{360} \sqrt{(lat1 - lat2)^2 +  (cos(\frac{\frac{(lat1 + lat2)}{2}\pi}{180}) (lng1 -lng2))^2} $$&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;select *, 2 * pi() * 6371000 / 360 * sqrt(power((lat1-lat2),2) + power(cos((lat1 + lat2) / 2 * pi() /180) * (lng1-lng2),2)) as distance from tmp_test;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;      name      |   lat1   |   lng1    |   lat2   |   lng2    |     distance
----------------+----------+-----------+----------+-----------+------------------
 tokyo-shinjuku | 35.68061 | 139.76735 | 35.68986 | 139.70025 | 6146.88718108597
&lt;/pre&gt;&lt;/div&gt;


&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="sql"></category></entry><entry><title>Query Cheet Sheet in RedShift(Postgres)</title><link href="http://yumebayashi.github.io/note/query-cheet-sheet-in-redshiftpostgres.html" rel="alternate"></link><published>2016-05-10T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-05-10:note/query-cheet-sheet-in-redshiftpostgres.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CREATE TABLE tmp_test (
   name character varying(255),
   value1 numeric(8,5),
   value2 numeric(8,5),
   created_at timestamp
)
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;bulk insert &amp;amp; create table&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INSERT INTO tmp_test (name,value1,value2,created_at) VALUES
(&amp;#39;a&amp;#39;,11.111, 111.11, getdate()),
(&amp;#39;b&amp;#39;,22.222, 222.22, getdate() + interval &amp;#39;1 day&amp;#39;),
(&amp;#39;c&amp;#39;,33.333, 333.33, getdate() + interval &amp;#39;1 day 12 hour&amp;#39;),
(&amp;#39;d&amp;#39;,44.444, 444.44, getdate() - interval &amp;#39;1 year&amp;#39;);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;you can omit &lt;code&gt;(name,value1,value2,created_at)&lt;/code&gt;
if the number of column you insert and the table has are same and know the order of the columns in the table.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT * FROM tmp_test ORDER BY name;
 name |  value1  |  value2   |     created_at
------+----------+-----------+---------------------
 a    | 11.11100 | 111.11000 | 2016-04-09 01:41:46
 b    | 22.22200 | 222.22000 | 2016-04-10 01:41:46
 c    | 33.33300 | 333.33000 | 2016-04-10 13:41:46
 d    | 44.44400 | 444.44000 | 2015-04-09 01:41:46
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INSERT INTO tmp_test2 (name) SELECT name FROM tmp_test
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT * FROM tmp_test2;
 name | value1 | value2 | created_at
------+--------+--------+------------
 a    |        |        |
 b    |        |        |
 c    |        |        |
 d    |        |        |
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CREATE TABLE tmp_test3 AS SELECT name,value1 FROM tmp_test;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT * FROM tmp_test3 ORDER BY name;
 name |  value1
------+----------
 a    | 11.11100
 b    | 22.22200
 c    | 33.33300
 d    | 44.44400
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;window function&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;make initial data set&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INSERT INTO tmp_test (name,value1,value2,created_at) VALUES
(&amp;#39;a&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;a&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;a&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;a&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;b&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;b&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;b&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;b&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;c&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;c&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;c&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;c&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;d&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;d&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;d&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000)),
(&amp;#39;d&amp;#39;,random() * 100, random() * 1000, getdate() - (interval &amp;#39;1 second&amp;#39;) * floor(random() * 10000));
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT * FROM tmp_test ORDER BY name,created_at;
 name |  value1  |  value2   |     created_at
------+----------+-----------+---------------------
 a    |  2.79153 | 283.88840 | 2016-05-09 02:48:03
 a    | 97.73130 | 690.71222 | 2016-05-09 04:04:00
 a    | 55.56720 | 648.48164 | 2016-05-09 04:07:29
 a    | 65.30828 |  82.12131 | 2016-05-09 04:54:15
 b    | 91.00008 | 520.90237 | 2016-05-09 03:00:32
 b    | 52.57934 | 994.37051 | 2016-05-09 04:10:30
 b    | 94.97609 | 991.10283 | 2016-05-09 04:23:42
 b    | 80.45081 | 281.75994 | 2016-05-09 04:40:12
 c    | 76.16128 | 781.77351 | 2016-05-09 02:59:04
 c    | 27.75059 | 738.44508 | 2016-05-09 03:57:41
 c    | 35.67327 | 322.03239 | 2016-05-09 04:08:57
 c    | 94.81574 | 294.11711 | 2016-05-09 04:56:16
 d    | 79.91998 | 862.42894 | 2016-05-09 03:20:00
 d    | 60.94562 | 388.22237 | 2016-05-09 03:20:56
 d    | 67.12917 | 952.42817 | 2016-05-09 04:46:49
 d    | 24.18907 | 299.34541 | 2016-05-09 05:00:30
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;add flag by the difference between value1 and value2&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT *,
       (CASE
            WHEN diff &amp;gt; 500 THEN 1
            WHEN diff &amp;gt; 300 THEN 2
            WHEN diff &amp;gt; 100 THEN 3
            ELSE 0
        END) AS type
FROM
  (SELECT *, abs(value1 - value2) AS diff
   FROM tmp_test
   ORDER BY name,created_at)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; name |  value1  |  value2   |     created_at      |   diff    | type
------+----------+-----------+---------------------+-----------+------
 a    |  2.79153 | 283.88840 | 2016-05-09 02:48:03 | 281.09687 |    3
 a    | 97.73130 | 690.71222 | 2016-05-09 04:04:00 | 592.98092 |    1
 a    | 55.56720 | 648.48164 | 2016-05-09 04:07:29 | 592.91444 |    1
 a    | 65.30828 |  82.12131 | 2016-05-09 04:54:15 |  16.81303 |    0
 b    | 91.00008 | 520.90237 | 2016-05-09 03:00:32 | 429.90229 |    2
 b    | 52.57934 | 994.37051 | 2016-05-09 04:10:30 | 941.79117 |    1
 b    | 94.97609 | 991.10283 | 2016-05-09 04:23:42 | 896.12674 |    1
 b    | 80.45081 | 281.75994 | 2016-05-09 04:40:12 | 201.30913 |    3
 c    | 76.16128 | 781.77351 | 2016-05-09 02:59:04 | 705.61223 |    1
 c    | 27.75059 | 738.44508 | 2016-05-09 03:57:41 | 710.69449 |    1
 c    | 35.67327 | 322.03239 | 2016-05-09 04:08:57 | 286.35912 |    3
 c    | 94.81574 | 294.11711 | 2016-05-09 04:56:16 | 199.30137 |    3
 d    | 79.91998 | 862.42894 | 2016-05-09 03:20:00 | 782.50896 |    1
 d    | 60.94562 | 388.22237 | 2016-05-09 03:20:56 | 327.27675 |    2
 d    | 67.12917 | 952.42817 | 2016-05-09 04:46:49 | 885.29900 |    1
 d    | 24.18907 | 299.34541 | 2016-05-09 05:00:30 | 275.15634 |    3
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;add sequential row number order by created_at for each name&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT * ,
       row_number() over(PARTITION BY name ORDER BY created_at ASC)
FROM tmp_test
ORDER BY name,created_at ASC;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; name |  value1  |  value2   |     created_at      | row_number
------+----------+-----------+---------------------+------------
 a    |  2.79153 | 283.88840 | 2016-05-09 02:48:03 |          1
 a    | 97.73130 | 690.71222 | 2016-05-09 04:04:00 |          2
 a    | 55.56720 | 648.48164 | 2016-05-09 04:07:29 |          3
 a    | 65.30828 |  82.12131 | 2016-05-09 04:54:15 |          4
 b    | 91.00008 | 520.90237 | 2016-05-09 03:00:32 |          1
 b    | 52.57934 | 994.37051 | 2016-05-09 04:10:30 |          2
 b    | 94.97609 | 991.10283 | 2016-05-09 04:23:42 |          3
 b    | 80.45081 | 281.75994 | 2016-05-09 04:40:12 |          4
 c    | 76.16128 | 781.77351 | 2016-05-09 02:59:04 |          1
 c    | 27.75059 | 738.44508 | 2016-05-09 03:57:41 |          2
 c    | 35.67327 | 322.03239 | 2016-05-09 04:08:57 |          3
 c    | 94.81574 | 294.11711 | 2016-05-09 04:56:16 |          4
 d    | 79.91998 | 862.42894 | 2016-05-09 03:20:00 |          1
 d    | 60.94562 | 388.22237 | 2016-05-09 03:20:56 |          2
 d    | 67.12917 | 952.42817 | 2016-05-09 04:46:49 |          3
 d    | 24.18907 | 299.34541 | 2016-05-09 05:00:30 |          4
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;get value from a previous row in the table. To get a value from the next row, using the LEAD function. below two queries return the same result.(order in over function is inversed)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; SELECT * , LAG(created_at, 1) OVER(PARTITION BY name ORDER BY created_at DESC) FROM tmp_test;

 SELECT * , LEAD(created_at, 1) OVER(PARTITION BY name ORDER BY created_at ASC) FROM tmp_test;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; name |  value1  |  value2   |     created_at      |         lag
------+----------+-----------+---------------------+---------------------
 a    |  2.79153 | 283.88840 | 2016-05-09 02:48:03 | 2016-05-09 04:04:00
 a    | 97.73130 | 690.71222 | 2016-05-09 04:04:00 | 2016-05-09 04:07:29
 a    | 55.56720 | 648.48164 | 2016-05-09 04:07:29 | 2016-05-09 04:54:15
 a    | 65.30828 |  82.12131 | 2016-05-09 04:54:15 |
 b    | 91.00008 | 520.90237 | 2016-05-09 03:00:32 | 2016-05-09 04:10:30
 b    | 52.57934 | 994.37051 | 2016-05-09 04:10:30 | 2016-05-09 04:23:42
 b    | 94.97609 | 991.10283 | 2016-05-09 04:23:42 | 2016-05-09 04:40:12
 b    | 80.45081 | 281.75994 | 2016-05-09 04:40:12 |
 c    | 76.16128 | 781.77351 | 2016-05-09 02:59:04 | 2016-05-09 03:57:41
 c    | 27.75059 | 738.44508 | 2016-05-09 03:57:41 | 2016-05-09 04:08:57
 c    | 35.67327 | 322.03239 | 2016-05-09 04:08:57 | 2016-05-09 04:56:16
 c    | 94.81574 | 294.11711 | 2016-05-09 04:56:16 |
 d    | 79.91998 | 862.42894 | 2016-05-09 03:20:00 | 2016-05-09 03:20:56
 d    | 60.94562 | 388.22237 | 2016-05-09 03:20:56 | 2016-05-09 04:46:49
 d    | 67.12917 | 952.42817 | 2016-05-09 04:46:49 | 2016-05-09 05:00:30
 d    | 24.18907 | 299.34541 | 2016-05-09 05:00:30 |
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;get the time difference(min) between current and previous row&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT *,
       EXTRACT(EPOCH FROM next - created_at) / 60 AS stay_min
FROM
  (SELECT * ,
          LAG(created_at, 1) OVER(PARTITION BY name ORDER BY created_at DESC) AS next
   FROM tmp_test);


WITH t AS (
SELECT * , 
       LAG(created_at, 1) OVER(PARTITION BY name ORDER BY created_at DESC) AS next 
FROM tmp_test
) 
SELECT extract(epoch FROM next - created_at) / 60  AS stay_min FROM t;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; name |  value1  |  value2   |     created_at      |        next         |     stay_min
------+----------+-----------+---------------------+---------------------+-------------------
 a    |  2.79153 | 283.88840 | 2016-05-09 02:48:03 | 2016-05-09 04:04:00 |             75.95
 a    | 97.73130 | 690.71222 | 2016-05-09 04:04:00 | 2016-05-09 04:07:29 |  3.48333333333333
 a    | 55.56720 | 648.48164 | 2016-05-09 04:07:29 | 2016-05-09 04:54:15 |  46.7666666666667
 a    | 65.30828 |  82.12131 | 2016-05-09 04:54:15 |                     |
 b    | 91.00008 | 520.90237 | 2016-05-09 03:00:32 | 2016-05-09 04:10:30 |  69.9666666666667
 b    | 52.57934 | 994.37051 | 2016-05-09 04:10:30 | 2016-05-09 04:23:42 |              13.2
 b    | 94.97609 | 991.10283 | 2016-05-09 04:23:42 | 2016-05-09 04:40:12 |              16.5
 b    | 80.45081 | 281.75994 | 2016-05-09 04:40:12 |                     |
 c    | 76.16128 | 781.77351 | 2016-05-09 02:59:04 | 2016-05-09 03:57:41 |  58.6166666666667
 c    | 27.75059 | 738.44508 | 2016-05-09 03:57:41 | 2016-05-09 04:08:57 |  11.2666666666667
 c    | 35.67327 | 322.03239 | 2016-05-09 04:08:57 | 2016-05-09 04:56:16 |  47.3166666666667
 c    | 94.81574 | 294.11711 | 2016-05-09 04:56:16 |                     |
 d    | 79.91998 | 862.42894 | 2016-05-09 03:20:00 | 2016-05-09 03:20:56 | 0.933333333333333
 d    | 60.94562 | 388.22237 | 2016-05-09 03:20:56 | 2016-05-09 04:46:49 |  85.8833333333333
 d    | 67.12917 | 952.42817 | 2016-05-09 04:46:49 | 2016-05-09 05:00:30 |  13.6833333333333
 d    | 24.18907 | 299.34541 | 2016-05-09 05:00:30 |                     |
&lt;/pre&gt;&lt;/div&gt;</summary><category term="sql"></category><category term="postgres"></category><category term="redshift"></category></entry><entry><title>RedShift Query Tips</title><link href="http://yumebayashi.github.io/note/redshift-query-tips.html" rel="alternate"></link><published>2016-05-09T00:00:00+09:00</published><author><name>yumebayashi</name></author><id>tag:yumebayashi.github.io,2016-05-09:note/redshift-query-tips.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;Confirm table definition&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;select * from pg_table_def where tablename = &amp;#39;target_table&amp;#39;;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Check running query and its pid&lt;ul&gt;
&lt;li&gt;terminate query -&amp;gt; &lt;code&gt;cancel {pid}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;select pid,starttime, left(query,50) from stv_recents where status=&amp;#39;Running&amp;#39;;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Check whether the table needs to be vacuumed or not&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/** 0.not vacuumed table */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kr"&gt;select&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0_not_sorted&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;status&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum_result&lt;span class="o"&gt;.&lt;/span&gt;tablename&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum_result&lt;span class="o"&gt;.&lt;/span&gt;sorted_rows&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum_result&lt;span class="o"&gt;.&lt;/span&gt;rows&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;cast&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;decimal&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;sort_percentage&lt;span class="w"&gt;&lt;/span&gt;
from&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;select&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;trim&lt;span class="o"&gt;(&lt;/span&gt;name&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;tablename&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum&lt;span class="o"&gt;(&lt;/span&gt;sorted_rows&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;sorted_rows&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum&lt;span class="o"&gt;(&lt;/span&gt;rows&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;rows&lt;span class="w"&gt;&lt;/span&gt;
from&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;stv_tbl_perm&lt;span class="w"&gt;&lt;/span&gt;
group&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt;&lt;/span&gt;
order&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sum_result&lt;span class="w"&gt;&lt;/span&gt;
where&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sorted_rows&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
UNION&lt;span class="w"&gt; &lt;/span&gt;ALL&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/** 1.vacuumed table */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kr"&gt;select&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;1_sorted&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;status&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum_result&lt;span class="o"&gt;.&lt;/span&gt;tablename&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum_result&lt;span class="o"&gt;.&lt;/span&gt;sorted_rows&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum_result&lt;span class="o"&gt;.&lt;/span&gt;rows&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;cast&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;cast&lt;span class="o"&gt;(&lt;/span&gt;sum_result&lt;span class="o"&gt;.&lt;/span&gt;sorted_rows&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;double&lt;span class="w"&gt; &lt;/span&gt;precision&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;cast&lt;span class="o"&gt;(&lt;/span&gt;sum_result&lt;span class="o"&gt;.&lt;/span&gt;rows&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;double&lt;span class="w"&gt; &lt;/span&gt;precision&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;decimal&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;sort_percentage&lt;span class="w"&gt;&lt;/span&gt;
from&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;select&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;trim&lt;span class="o"&gt;(&lt;/span&gt;name&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;tablename&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum&lt;span class="o"&gt;(&lt;/span&gt;sorted_rows&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;sorted_rows&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sum&lt;span class="o"&gt;(&lt;/span&gt;rows&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;rows&lt;span class="w"&gt;&lt;/span&gt;
from&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;stv_tbl_perm&lt;span class="w"&gt;&lt;/span&gt;
group&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt;&lt;/span&gt;
order&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sum_result&lt;span class="w"&gt;&lt;/span&gt;
where&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sorted_rows&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
order&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;by&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;status&lt;span class="w"&gt; &lt;/span&gt;asc&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;sort_percentage&lt;span class="w"&gt; &lt;/span&gt;asc&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;rows&lt;span class="w"&gt; &lt;/span&gt;desc&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;returns like below&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    status    |             tablename              | sorted_rows |    rows     | sort_percentage
--------------+------------------------------------+-------------+-------------+-----------------
 0_not_sorted | hogehoge_table_0                   |           0 |    40980633 |           0.000
 0_not_sorted | hogehoge_table_1                   |           0 |      108008 |           0.000
 0_not_sorted | hogehoge_table_2                   |           0 |        5002 |           0.000
 0_not_sorted | hogehoge_table_3                   |           0 |        4000 |           0.000
 0_not_sorted | hogehoge_table_4                   |           0 |        1480 |           0.000
 1_sorted     | hogehoge_table_5                   |        1586 |       17003 |           0.093
 1_sorted     | hogehoge_table_6                   |    21258371 |   170611094 |           0.125
 1_sorted     | hogehoge_table_7                   |           1 |           2 |           0.500
 1_sorted     | hogehoge_table_8                   |     2037917 |     3253190 |           0.626
&lt;/pre&gt;&lt;/div&gt;</summary><category term="redshift"></category></entry></feed>